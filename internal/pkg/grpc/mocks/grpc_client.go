// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	google_golang_orggrpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)

// GrpcClient is an autogenerated mock type for the GrpcClient type
type GrpcClient struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *GrpcClient) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetGrpcConnection provides a mock function with given fields:
func (_m *GrpcClient) GetGrpcConnection() *google_golang_orggrpc.ClientConn {
	ret := _m.Called()

	var r0 *google_golang_orggrpc.ClientConn
	if rf, ok := ret.Get(0).(func() *google_golang_orggrpc.ClientConn); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*google_golang_orggrpc.ClientConn)
		}
	}

	return r0
}

type mockConstructorTestingTNewGrpcClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewGrpcClient creates a new instance of GrpcClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewGrpcClient(t mockConstructorTestingTNewGrpcClient) *GrpcClient {
	mock := &GrpcClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
